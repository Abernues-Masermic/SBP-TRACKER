<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    
    <Style x:Key="LabelCheckedOptions" TargetType="Label">
        <Setter Property="Label.HorizontalAlignment" Value="Center"/>
        <Setter Property="Label.FontWeight" Value="Bold"/>
        <Setter Property="Label.FontSize" Value="13"/>
        <Setter Property="Label.Foreground" Value="White"/>
        <Setter Property="Label.FontFamily" Value="Verdana"/>
        <Setter Property="Padding" Value="1"/>
    </Style>

    <TransformGroup x:Key="RenderTransformCheckbox">
        <ScaleTransform ScaleX="1" ScaleY="1" />
        <SkewTransform AngleX="0" AngleY="0" />
        <RotateTransform Angle="0" />
        <TranslateTransform X="0" Y="0" />
    </TransformGroup>
  
    <Style x:Key="CheckBoxSwitchStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">

                    <ControlTemplate.Resources>
                        
                        <Storyboard x:Key="OnChecking">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="slider" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="77" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        
                        <Storyboard x:Key="OnUnchecking">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="slider" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        
                    </ControlTemplate.Resources>

                    <DockPanel x:Name="dockPanel">
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" RecognizesAccessKey="True" VerticalAlignment="Center" />
                        <Grid>
                            
                            <Border x:Name="BackgroundBorder" BorderBrush="#FF939393"  Background="{StaticResource CheckedWhite}" BorderThickness="1,1,2,2" CornerRadius="3" Height="27" Width="150">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>

                                    <Label x:Name="Label_start" Content="START" Grid.Column="0"  Style="{StaticResource LabelCheckedOptions}"  HorizontalAlignment="Center" VerticalAlignment="Center" />
                                    <Label x:Name="Label_stop" Content="STOP" Grid.Column="1" Style="{StaticResource LabelCheckedOptions}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                </Grid>
                            </Border>

                            <Border BorderBrush="#FF939393" Background="{StaticResource CheckedWhite}" RenderTransform="{StaticResource RenderTransformCheckbox}"  HorizontalAlignment="Left" x:Name="slider" Width="73" Height="27" BorderThickness="1" CornerRadius="3" RenderTransformOrigin="0.5,0.5"/>

                        </Grid>
                    </DockPanel>

                    <ControlTemplate.Triggers>
                        
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource OnUnchecking}" x:Name="OnUnchecking_BeginStoryboard" />
                            </Trigger.ExitActions>
                            
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource OnChecking}" x:Name="OnChecking_BeginStoryboard" />
                            </Trigger.EnterActions>

                            <Setter TargetName="BackgroundBorder" Property="Background" Value="{StaticResource CheckedGreen}" />
                            <Setter TargetName="BackgroundBorder" Property="BorderBrush" Value="{StaticResource CheckedGreenBorder}" />
                        </Trigger>

                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="BackgroundBorder" Property="Background" Value="{StaticResource CheckedRed}" />
                            <Setter TargetName="BackgroundBorder" Property="BorderBrush" Value="{StaticResource CheckedRedBorder}" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <!-- ToDo: Add Style for Isenabled == False -->
                        </Trigger>
                        
                    </ControlTemplate.Triggers>
                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>




    <Style x:Key="Checkbox_disable_uncheck" TargetType="{x:Type CheckBox}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush"   Value="Black"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">

                    <StackPanel Orientation="Horizontal">

                        <BulletDecorator Background="Transparent" Cursor="Hand">
                            <!--Bullet-->
                            <BulletDecorator.Bullet>
                                <Grid Height="16" Width="16">
                                    <Border Name="RadioOuter" Background="Transparent" BorderBrush="Black" BorderThickness="2" CornerRadius="2" />
                                    <Border Name="RadioMark" CornerRadius="0" Margin="4"  Background="DarkGreen" Visibility="Hidden" />
                                </Grid>
                            </BulletDecorator.Bullet>

                            <!--Text element-->
                            <TextBlock Margin="8,0,0,0" Foreground="#FF042A55"  FontWeight="Bold" FontFamily="Arial" FontSize="12"/>

                        </BulletDecorator>

                    </StackPanel>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="RadioMark" Property="Visibility" Value="Visible"/>
                            <Setter Property="IsEnabled" Value="False"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="RadioMark" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="RadioOuter" Property="BorderBrush" Value="DarkGray" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="RadioOuter" Property="BorderBrush" Value="Black" />
                            <Setter TargetName="RadioMark" Property="Background" Value="DarkBlue"/>
                        </Trigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="Checkbox_setting" TargetType="{x:Type CheckBox}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush"   Value="Black"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">

                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">

                        <BulletDecorator Background="Transparent" Cursor="Hand">
                            <!--Bullet-->
                            <BulletDecorator.Bullet>
                                <Grid Height="16" Width="16">
                                    <Border Name="RadioOuter" Background="White" BorderBrush="Black" BorderThickness="2" CornerRadius="2" />
                                    <Border Name="RadioMark" CornerRadius="0" Margin="4"  Background="DarkGreen" Visibility="Hidden" />
                                </Grid>
                            </BulletDecorator.Bullet>

                            <!--Text element-->
                            <TextBlock Margin="8,0,0,0" Foreground="Black"  FontWeight="Bold" FontFamily="Arial" FontSize="12">
                            <ContentPresenter />
                            </TextBlock>

                        </BulletDecorator>

                    </StackPanel>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="RadioMark" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="RadioMark" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="RadioOuter" Property="BorderBrush" Value="DarkGray" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="RadioOuter" Property="BorderBrush" Value="Black" />
                            <Setter TargetName="RadioMark" Property="Background" Value="DarkBlue"/>
                        </Trigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



</ResourceDictionary>